{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Fantino\\\\Desktop\\\\weather-app\\\\w-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fantino\\\\Desktop\\\\weather-app\\\\w-app\\\\src\\\\components\\\\search\\\\Search.jsx\";\nimport React, { useState } from \"react\";\n\nfunction Search(_ref) {\n  var textPlaceholder = _ref.textPlaceholder;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      weatherData = _useState2[0],\n      setWeatherData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchCity = _useState4[0],\n      setSearchCity = _useState4[1];\n\n  var findingPlace = function findingPlace(event) {\n    setSearchCity(event.target.value);\n  };\n\n  var searchLocation = function searchLocation(event) {\n    if (event.key === \"Enter\") {\n      fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/weather/?q=\").concat(searchCity, \"&units=metric&APPID=\").concat(process.env.REACT_APP_API_KEY)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return console.log(data);\n      });\n    } else {\n      setSearchCity(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    value: searchCity,\n    onChange: findingPlace,\n    onKeyPress: searchLocation,\n    type: \"text\",\n    placeholder: textPlaceholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Search;","map":{"version":3,"names":["React","useState","Search","textPlaceholder","weatherData","setWeatherData","searchCity","setSearchCity","findingPlace","event","target","value","searchLocation","key","fetch","process","env","REACT_APP_API_URL","REACT_APP_API_KEY","then","response","json","data","console","log"],"sources":["C:/Users/Fantino/Desktop/weather-app/w-app/src/components/search/Search.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Search({ textPlaceholder }) {\r\n\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [searchCity, setSearchCity] = useState(\"\");\r\n\r\n  const findingPlace = (event) => {\r\n    setSearchCity(event.target.value);\r\n  }\r\n\r\n  const searchLocation = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      fetch(\r\n        `${process.env.REACT_APP_API_URL}/weather/?q=${searchCity}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => console.log(data));\r\n    } else {\r\n      setSearchCity(\"\");\r\n    }\r\n  } \r\n  \r\n\r\n  return (\r\n    <input      \r\n      value={searchCity}\r\n      onChange={findingPlace}\r\n      onKeyPress={searchLocation}\r\n      type=\"text\"\r\n      placeholder={textPlaceholder}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,MAAT,OAAqC;EAAA,IAAnBC,eAAmB,QAAnBA,eAAmB;;EAAA,gBAEGF,QAAQ,CAAC,EAAD,CAFX;EAAA;EAAA,IAE5BG,WAF4B;EAAA,IAEfC,cAFe;;EAAA,iBAGCJ,QAAQ,CAAC,EAAD,CAHT;EAAA;EAAA,IAG5BK,UAH4B;EAAA,IAGhBC,aAHgB;;EAKnC,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;IAC9BF,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACH,KAAD,EAAW;IAChC,IAAIA,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2B;MACzBC,KAAK,WACAC,OAAO,CAACC,GAAR,CAAYC,iBADZ,yBAC4CX,UAD5C,iCAC6ES,OAAO,CAACC,GAAR,CAAYE,iBADzF,EAAL,CAGGC,IAHH,CAGQ,UAACC,QAAD;QAAA,OAAcA,QAAQ,CAACC,IAAT,EAAd;MAAA,CAHR,EAIGF,IAJH,CAIQ,UAACG,IAAD;QAAA,OAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAV;MAAA,CAJR;IAKD,CAND,MAMO;MACLf,aAAa,CAAC,EAAD,CAAb;IACD;EACF,CAVD;;EAaA,oBACE;IACE,KAAK,EAAED,UADT;IAEE,QAAQ,EAAEE,YAFZ;IAGE,UAAU,EAAEI,cAHd;IAIE,IAAI,EAAC,MAJP;IAKE,WAAW,EAAET,eALf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AASD;;AAED,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}